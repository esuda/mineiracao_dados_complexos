!(consecutive(cepagri_c$sensa, 144)) , ]
length(!(consecutive(cepagri_c$temp, 144))|
(!consecutive(cepagri_c$vento, 144))|
!(consecutive(cepagri_c$umid, 144))|
!(consecutive(cepagri_c$sensa, 144)))
length(cepagri_cou$sensa)/length(cepagri_c$sensa)
cepagri_ce <-cepagri_c[(!consecutive(cepagri_c$temp, 144))&
(!consecutive(cepagri_c$vento, 144))&
(!consecutive(cepagri_c$umid, 144))&
(!consecutive(cepagri_c$sensa, 144)) , ]
length(cepagri_ce$sensa)/length(cepagri_c$sensa)
t_v <- (!consecutive(cepagri_c$temp, 144)) +
(!consecutive(cepagri_c$vento, 144)) +
(!consecutive(cepagri_c$umid, 144)) +
(!consecutive(cepagri_c$sensa, 144))
cepagri_soma <- cepagri_c[(t_v > 1), ]
length(cepagri_soma$sensa)/length(cepagri_c$sensa)
t_vv <- (!consecutive(cepagri_c$temp, 144)) *
(!consecutive(cepagri_c$vento, 144)) *
(!consecutive(cepagri_c$umid, 144)) *
(!consecutive(cepagri_c$sensa, 144))
cepagri_multi <- cepagri_c[(t_vv),]
length(cepagri_multi$sensa)/length(cepagri_c$sensa)
cepagri_se <-cepagri_c[(!consecutive(cepagri_c$sensa, 144)) , ]
length(cepagri_se$sensa)/length(cepagri_c$sensa)
sum((!consecutive(cepagri_c$temp, 144)))
sum(!consecutive(cepagri_c$vento, 144))
sum(!consecutive(cepagri_c$umid, 144))
sum(!consecutive(cepagri_c$sensa, 144))
class(t)
row.names(cepagri_cli) <- NULL
row.names(cepagri_ce) <- NULL
setdiff(cepagri_cli$horario, cepagri_ce$horario)
cepagri_cli <- cepagri_c[(!consecutive(cepagri_c$temp, 144)) , ]
cepagri_cli <- cepagri_cli[(!consecutive(cepagri_cli$vento, 144)) , ]
cepagri_cli <- cepagri_cli[(!consecutive(cepagri_cli$umid, 144)) , ]
cepagri_cli <- cepagri_cli[(!consecutive(cepagri_cli$sensa, 144)) , ]
summary(cepagri_cli)
length(cepagri_cli$sensa)/length(cepagri_c$sensa)
consecutive(cepagri_cli$temp,144)
cepagri_ct <- cepagri_c[(!consecutive(cepagri_c$temp, 144)) , ]
cepagri_ct
cepagri_ct$horario <- as.POSIXlt(cepagri_ct$horario)
cepagri_ct$ano <- unclass(cepagri_ct$horario)$year + 1900
cepagri_ct$mes <- unclass(cepagri_ct$horario)$mon + 1
cepagri_ct$dia <- unclass(cepagri_ct$horario)$yday +1
cepagri_ct$dia_m <- unclass(cepagri_ct$horario)$mday +1
cepagri_ct$OK <- !is.na(cepagri_ct$sensa)
######
tapply(cepagri_ct$OK, cepagri_ct$dia, mean)
tapply(cepagri_ct$OK, list(cepagri_ct$ano, cepagri_ct$mes), mean)
cepagri_ct <- cepagri_ct[cepagri_ct$OK, ]
cepagri_ct$temp <- as.numeric(cepagri_ct$temp)
tapply(cepagri_ct$temp, cepagri_ct$dia, mean)
tapply(cepagri_ct$temp, cepagri_ct$dia, median)
tapply(cepagri_ct$temp, cepagri_ct$dia, sd)
table <- cepagri_ct %>% group_by(dia_m,mes) %>% summarise(media = mean(temp))
ggplot(table, aes(x=dia_m, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
#temperatura e ano
table <- cepagri_ct %>% group_by(ano,mes) %>% summarise(media = mean(temp))
ggplot(table, aes(x=ano, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
# as cores estão mais claras * -> temperatura mais elevada com o partir do tempo
table <- cepagri_ct %>% group_by(dia_m,mes) %>% summarise(media = sd(temp))
ggplot(table, aes(x=dia_m, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
table <- cepagri_ct %>% group_by(dia_m,mes) %>% summarise(media = mean(umid))
ggplot(table, aes(x=dia_m, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
table <- cepagri_ct %>% group_by(dia_m,mes) %>% summarise(media = mean(vento))
ggplot(table, aes(x=dia_m, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
table <- cepagri_ct %>% group_by(dia_m,mes) %>% summarise(sd = sd(vento))
ggplot(table, aes(x=dia_m, y = mes, fill=sd)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
cepagri_ct
#table <- cepagri_ct %>% group_by(dia_m,mes) %>% summarise(sd = sd(vento))
table <- cepagri_ct %>% group_by(mes) %>% summarise(media = mean(temp), mean_2 = mean(umid))
ggplot(table) +
geom_col(aes(x = mes, y = media), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(x = mes, y = mean_2), size = 1, color="red", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./3, name = "mean_2"))
table <- cepagri_ct %>% group_by(mes) %>% summarise(media = mean(temp), mean_2 = mean(umid))
ggplot(table) +
geom_col(aes(x = mes, y = media), size = 1, color = "darkblue", fill = "darkblue") +
geom_line(aes(x = mes, y = mean_2), size = 1.5, color="red", group = 3) +
scale_y_continuous(sec.axis = sec_axis(~./1, name = "mean_2"))
table <- cepagri_ct %>% group_by(mes) %>% summarise(media = mean(temp), mean_2 = mean(umid))
ggplot(table) +
geom_col(aes(x = mes, y = media), size = 1, color = "darkblue", fill = "darkblue") +
geom_line(aes(x = mes, y = mean_2), size = 1.5, color="red", group = 3)
table <- cepagri_ct %>% group_by(mes) %>% summarise(media = mean(temp), mean_2 = mean(umid))
ggplot(table) +
geom_col(aes(x = mes, y = media), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(x = mes, y = mean_2), size = 1, color="red", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./3, name = "mean_2"))
ggplot(df) +
geom_col(aes(x = ID, y = series1), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(x = ID, y = 3*series2), size = 1.5, color="red", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./3, name = "series2"))
library(ggplot2)
library(dplyr)
names <- c("horario", "temp", "vento", "umid", "sensa")
con <- url("https://ic.unicamp.br/~zanoni/cepagri/cepagri.csv")
cepagri <- read.table(con, header = FALSE,
fill = TRUE, sep = ";",
col.names = names)
class(cepagri)
summary(cepagri)
summary(cepagri$horario)
class(cepagri$horario)
cepagri$horario <- as.POSIXct(cepagri$horario,
format = '%d/%m/%Y-%H:%M',
tz = "America/Sao_Paulo")
class(cepagri$horario)
#menor data do dataframe
min(cepagri$horario)
#maior data do dataframe
max(cepagri$horario)
unique(cepagri$horario)
data_min <- as.POSIXct('2015-01-01',format= '%Y-%m-%d')
data_max <- as.POSIXct('2020-12-31',format= '%Y-%m-%d')
class(data_min)
cepagri <-cepagri[cepagri$horario >= data_min & cepagri$horario <= data_max,]
min(cepagri$horario)
max(cepagri$horario)
summary(cepagri)
class(cepagri$temp)
cepagri$temp <- as.numeric(cepagri$temp)
unique(cepagri$temp)
summary(cepagri$temp)
summary(cepagri)
length(cepagri$temp)
cepagri[is.na(cepagri$sensa),]
cepagri_c <- cepagri
cepagri_c <- cepagri_c[!is.na(cepagri_c$sensa),]
summary(cepagri_c)
length(cepagri_c$horario)/length(cepagri$temp)
length(cepagri_c$temp)
#cepagri_c[cepagri_c$sensa >50,]
cepagri_c
#preenchendo valores outliers como vazios
cepagri_c[cepagri_c$sensa >= 90, ]
cepagri_c[cepagri_c$sensa == 99.9, 5] <- NA
cepagri_c[is.na(cepagri_c$sensa),]
cepagri_c <- cepagri_c[!is.na(cepagri_c$sensa),]
row.names(cepagri_c) <- NULL
summary(cepagri_c)
#verificando valor de outlier para vento
cepagri_c[cepagri_c$vento == 143.60, ]
cepagri_c[48498:48508,]
#head(cepagri_no_na[cepagri_no_na$sensa > 80, ], 10)
summary(cepagri$sensa)
#definindo função para retirar números repetidos
#olhando os próximos
consecutive <- function(vector, k = 2) {
n <- length(vector)
result <- logical(n)
for (i in k:n)
if (all(vector[(i-k+1):i] == vector[i]))
result[(i-k+1):i] <- TRUE
return(result)
}
a <- cepagri_c[consecutive(cepagri_c$temp, 144),]
b <- cepagri_c[consecutive(cepagri_c$vento, 144),]
c <- cepagri_c[consecutive(cepagri_c$umid, 144),]
d <- cepagri_c[consecutive(cepagri_c$sensa, 144),]
length(cepagri_c[(consecutive(cepagri_c$temp, 144))&(consecutive(cepagri_c$vento, 144)) , ]%temp)
length(cepagri_c[(consecutive(cepagri_c$temp, 144))&(consecutive(cepagri_c$vento, 144)) , ])
length(cepagri_c[(consecutive(cepagri_c$temp, 144))&(consecutive(cepagri_c$vento, 144)) , ]$temp)
length(unique(rbind(a,b))$temp)
length(cepagri_c[(consecutive(cepagri_c$temp, 144))|(consecutive(cepagri_c$vento, 144)) , ]$temp)
repeated_temp <- cepagri_c[consecutive(cepagri_c$temp, 144),]
repeated_wind <- cepagri_c[consecutive(cepagri_c$vento, 144),]
repeated_humid <- cepagri_c[consecutive(cepagri_c$umid, 144),]
repeated_sensa <- cepagri_c[consecutive(cepagri_c$sensa, 144),]
cepagri_repeated <- unique(rbind(repeated_temp,repeated_wind,repeated_humid,repeated_sensa))
cepagri_no_repeats_a <- cepagri_c[!cepagri_c$horario %in% cepagri_repeated$horario,]
cepagri_no_repeats_b <-cepagri_c[(!consecutive(cepagri_c$temp, 144))&
(!consecutive(cepagri_c$vento, 144))&
(!consecutive(cepagri_c$umid, 144))&
(!consecutive(cepagri_c$sensa, 144)) , ]
length(cepagri_no_repeats_a$sensa)/length(cepagri_no_repeats_b$sensa)
consecutive(cepagri_c$sensa, 144)) , ]
cepagri_cleaned <-cepagri_c[!(consecutive(cepagri_c$temp, 144))|
consecutive(cepagri_c$vento, 144))|
consecutive(cepagri_c$umid, 144))|
consecutive(cepagri_c$sensa, 144)) , ]
#install.packages("dplyr")
library(ggplot2)
library(dplyr)
names <- c("horario", "temp", "vento", "umid", "sensa")
con <- url("https://ic.unicamp.br/~zanoni/cepagri/cepagri.csv")
cepagri <- read.table(con, header = FALSE,
fill = TRUE, sep = ";",
col.names = names)
class(cepagri)
summary(cepagri)
summary(cepagri$horario)
class(cepagri$horario)
cepagri$horario <- as.POSIXct(cepagri$horario,
format = '%d/%m/%Y-%H:%M',
tz = "America/Sao_Paulo")
class(cepagri$horario)
#menor data do dataframe
min(cepagri$horario)
#maior data do dataframe
max(cepagri$horario)
unique(cepagri$horario)
data_min <- as.POSIXct('2015-01-01',format= '%Y-%m-%d')
data_max <- as.POSIXct('2020-12-31',format= '%Y-%m-%d')
class(data_min)
cepagri <-cepagri[cepagri$horario >= data_min & cepagri$horario <= data_max,]
min(cepagri$horario)
max(cepagri$horario)
summary(cepagri)
class(cepagri$temp)
cepagri$temp <- as.numeric(cepagri$temp)
unique(cepagri$temp)
summary(cepagri$temp)
summary(cepagri)
length(cepagri$temp)
cepagri[is.na(cepagri$sensa),]
cepagri_cleaned <- cepagri
cepagri_cleaned <- cepagri_cleaned[!is.na(cepagri_cleaned$sensa),]
summary(cepagri_cleaned)
length(cepagri_cleaned$horario)/length(cepagri$horario)
length(cepagri_cleaned$temp)
#preenchendo valores outliers como vazios
cepagri_cleaned[cepagri_cleaned$sensa >= 90, ]
cepagri_cleaned[cepagri_cleaned$sensa == 99.9, 5] <- NA
cepagri_cleaned[is.na(cepagri_cleaned$sensa),]
cepagri_cleaned <- cepagri_cleaned[!is.na(cepagri_cleaned$sensa),]
row.names(cepagri_cleaned) <- NULL
summary(cepagri_cleaned)
#verificando valor de outlier para vento
cepagri_cleaned[cepagri_cleaned$vento == 143.60, ]
cepagri_cleaned[48498:48508,]
#head(cepagri_no_na[cepagri_no_na$sensa > 80, ], 10)
summary(cepagri$sensa)
#definindo função para retirar números repetidos
#olhando os próximos
consecutive <- function(vector, k = 2) {
n <- length(vector)
result <- logical(n)
for (i in k:n)
if (all(vector[(i-k+1):i] == vector[i]))
result[(i-k+1):i] <- TRUE
return(result)
}
summary(cepagri$temp)
sum(is.na(cepagri$temp))
# verificando ocorrências repetidas por tempos prologandos para decidir melhor
# estrategia para tratar os dados
any(consecutive(cepagri_cleaned$temp, 144))  # 01 dia
any(consecutive(cepagri_cleaned$temp, 288))  # 02 dias
any(consecutive(cepagri_cleaned$temp, 720))  # 05 dias
any(consecutive(cepagri_cleaned$temp, 1440)) # 10 dias
any(consecutive(cepagri_cleaned$temp, 1584)) # 11 dias
any(consecutive(cepagri_cleaned$temp, 2160)) # 15 dias
any(consecutive(cepagri_cleaned$vento, 144))  # 01 dia
any(consecutive(cepagri_cleaned$vento, 288))  # 02 dias
any(consecutive(cepagri_cleaned$vento, 720))  # 05 dias
any(consecutive(cepagri_cleaned$vento, 1440)) # 10 dias
any(consecutive(cepagri_cleaned$vento, 1584)) # 11 dias
any(consecutive(cepagri_cleaned$vento, 2160)) # 15 dias
any(consecutive(cepagri_cleaned$umid, 144))  # 01 dia
any(consecutive(cepagri_cleaned$umid, 288))  # 02 dias
any(consecutive(cepagri_cleaned$umid, 720))  # 05 dias
any(consecutive(cepagri_cleaned$umid, 1440)) # 10 dias
any(consecutive(cepagri_cleaned$umid, 1584)) # 11 dias
any(consecutive(cepagri_cleaned$umid, 2160)) # 15 dias
any(consecutive(cepagri_cleaned$sensa, 144))  # 01 dia
any(consecutive(cepagri_cleaned$sensa, 288))  # 02 dias
any(consecutive(cepagri_cleaned$sensa, 720))  # 05 dias
any(consecutive(cepagri_cleaned$sensa, 1440)) # 10 dias
any(consecutive(cepagri_cleaned$sensa, 1584)) # 11 dias
any(consecutive(cepagri_cleaned$sensa, 2160)) # 15 dias
#removendo dados
cepagri_cleaned <-cepagri_cleaned[
!(
consecutive(cepagri_cleaned$temp, 144)|
consecutive(cepagri_cleaned$vento, 144)|
consecutive(cepagri_cleaned$umid, 144)|
consecutive(cepagri_cleaned$sensa, 144)
) ,
]
length(cepagri_cleaned$temp)/length(cepagri$temp)
class(t)
summary(cepagri_cleaned)
cepagri_ct <- cepagri_cleaned[(!consecutive(cepagri_c$temp, 144)) , ]
cepagri_ct$horario <- as.POSIXlt(cepagri_ct$horario)
cepagri_ct$ano <- unclass(cepagri_ct$horario)$year + 1900
cepagri_ct$mes <- unclass(cepagri_ct$horario)$mon + 1
cepagri_ct$dia <- unclass(cepagri_ct$horario)$yday +1
cepagri_ct$dia_do_mes <- unclass(cepagri_ct$horario)$mday +1
cepagri_ct$OK <- !is.na(cepagri_ct$sensa)
######
######
tapply(cepagri_ct$OK, cepagri_ct$dia, mean)
is.na(cepagri_ct$sensa)
any(is.na(cepagri_ct$sensa))
summary(cepagri_cleaned)
#definindo um dataset com colunas de informações temporais
cepagri_ct <- cepagri_cleaned
cepagri_ct$OK <- !is.na(cepagri_ct$sensa)
#definindo um dataset com colunas de informações temporais
cepagri_ct <- cepagri_cleaned
cepagri_ct$horario <- as.POSIXlt(cepagri_ct$horario)
cepagri_ct$ano <- unclass(cepagri_ct$horario)$year + 1900
cepagri_ct$mes <- unclass(cepagri_ct$horario)$mon + 1
cepagri_ct$dia <- unclass(cepagri_ct$horario)$yday +1
cepagri_ct$dia_do_mes <- unclass(cepagri_ct$horario)$mday +1
any(is.na(cepagri_ct$sensa)
sum(is.na(cepagri_ct$sensa)
Sum(is.na(cepagri_ct$sensa)
######
sum(is.na(cepagri$temp))
######
sum(is.na(cepagri$temp))
######
sum(is.na(cepagri_ct$temp))
is.na(cepagri_ct$sensa)
#definindo um dataset com colunas de informações temporais
cepagri_ct <- cepagri_cleaned
tapply(cepagri_ct$temp, cepagri_ct$dia, mean)
summary(cepagri_cleaned)
epagri_posix_lt$horario <- as.POSIXlt(cepagri_posix_lt$horario)
cepagri_posix_lt$ano <- unclass(cepagri_posix_lt$horario)$year + 1900
cepagri_posix_lt$mes <- unclass(cepagri_posix_lt$horario)$mon + 1
cepagri_posix_lt$dia <- unclass(cepagri_posix_lt$horario)$yday +1
cepagri_posix_lt$dia_do_mes <- unclass(cepagri_posix_lt$horario)$mday +1
summary(cepagri_cleaned)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, mean)
#definindo um dataset com colunas de informações temporais
cepagri_posix_lt <- cepagri_cleaned
epagri_posix_lt$horario <- as.POSIXlt(cepagri_posix_lt$horario)
cepagri_posix_lt$ano <- unclass(cepagri_posix_lt$horario)$year + 1900
cepagri_posix_lt$mes <- unclass(cepagri_posix_lt$horario)$mon + 1
cepagri_posix_lt$dia <- unclass(cepagri_posix_lt$horario)$yday +1
cepagri_posix_lt$dia_do_mes <- unclass(cepagri_posix_lt$horario)$mday +1
cepagri_posix_lt$horario <- as.POSIXlt(cepagri_posix_lt$horario)
cepagri_posix_lt$ano <- unclass(cepagri_posix_lt$horario)$year + 1900
cepagri_posix_lt$mes <- unclass(cepagri_posix_lt$horario)$mon + 1
cepagri_posix_lt$dia <- unclass(cepagri_posix_lt$horario)$yday +1
cepagri_posix_lt$dia_do_mes <- unclass(cepagri_posix_lt$horario)$mday +1
summary(cepagri_posix_lt)
######
cepagri_posix_lt$dia_do_mes <- unclass(cepagri_posix_lt$horario)$mday
summary(cepagri_posix_lt)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, mean)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, median)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, sd)
table <- cepagri_posix_lt %>% group_by(dia_m,mes) %>% summarise(media = mean(temp))
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, mean)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, median)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, sd)
table <- cepagri_posix_lt %>% group_by(dia_do_mes,mes) %>% summarise(media = mean(temp))
ggplot(table, aes(x=dia_do_mes, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
#temperatura e ano
table <- cepagri_posix_lt %>% group_by(ano,mes) %>% summarise(media = mean(temp))
#carregando bibliotecas
#install.packages("dplyr")
library(ggplot2)
library(dplyr)
#carregando dataframe
names <- c("horario", "temp", "vento", "umid", "sensa")
con <- url("https://ic.unicamp.br/~zanoni/cepagri/cepagri.csv")
cepagri <- read.table(con, header = FALSE,
fill = TRUE, sep = ";",
col.names = names)
class(cepagri)
summary(cepagri)
summary(cepagri$horario)
class(cepagri$horario)
cepagri$horario <- as.POSIXct(cepagri$horario,
format = '%d/%m/%Y-%H:%M',
tz = "America/Sao_Paulo")
class(cepagri$horario)
#menor data do dataframe
min(cepagri$horario)
#maior data do dataframe
max(cepagri$horario)
unique(cepagri$horario)
data_min <- as.POSIXct('2015-01-01',format= '%Y-%m-%d')
data_max <- as.POSIXct('2020-12-31',format= '%Y-%m-%d')
class(data_min)
cepagri <-cepagri[cepagri$horario >= data_min & cepagri$horario <= data_max,]
min(cepagri$horario)
max(cepagri$horario)
summary(cepagri)
class(cepagri$temp)
cepagri$temp <- as.numeric(cepagri$temp)
unique(cepagri$temp)
summary(cepagri$temp)
summary(cepagri)
length(cepagri$temp)
cepagri[is.na(cepagri$sensa),]
cepagri_cleaned <- cepagri
cepagri_cleaned <- cepagri_cleaned[!is.na(cepagri_cleaned$sensa),]
cepagri <- read.table(con, header = FALSE,
fill = TRUE, sep = ";",
col.names = names)
con <- url("https://ic.unicamp.br/~zanoni/cepagri/cepagri.csv")
cepagri <- read.table(con, header = FALSE,
fill = TRUE, sep = ";",
col.names = names)
#carregando dataframe
names <- c("horario", "temp", "vento", "umid", "sensa")
con <- url("https://ic.unicamp.br/~zanoni/cepagri/cepagri.csv")
cepagri <- read.table(con, header = FALSE,
fill = TRUE, sep = ";",
col.names = names)
cepagri$horario <- as.POSIXct(cepagri$horario,
format = '%d/%m/%Y-%H:%M',
tz = "America/Sao_Paulo")
class(cepagri$horario)
#menor data do dataframe
min(cepagri$horario)
#maior data do dataframe
max(cepagri$horario)
unique(cepagri$horario)
data_min <- as.POSIXct('2015-01-01',format= '%Y-%m-%d')
data_max <- as.POSIXct('2020-12-31',format= '%Y-%m-%d')
cepagri <-cepagri[cepagri$horario >= data_min & cepagri$horario <= data_max,]
min(cepagri$horario)
max(cepagri$horario)
#criando uma copia do dataset para ser limpa
cepagri_cleaned <- cepagri
#removendo dados não numericos [ERRO] da coluna temperatura
cepagri_cleaned$temp <- as.numeric(cepagri_cleaned$temp)
cepagri_cleaned <- cepagri_cleaned[!is.na(cepagri_cleaned$sensa),]
summary(cepagri_cleaned)
length(cepagri_cleaned$horario)/length(cepagri$horario)
length(cepagri_cleaned$temp)
#preenchendo valores outliers como vazios
cepagri_cleaned[cepagri_cleaned$sensa >= 90, ]
cepagri_cleaned[cepagri_cleaned$sensa == 99.9, 5] <- NA
cepagri_cleaned[is.na(cepagri_cleaned$sensa),]
cepagri_cleaned <- cepagri_cleaned[!is.na(cepagri_cleaned$sensa),]
row.names(cepagri_cleaned) <- NULL
summary(cepagri_cleaned)
#verificando valor de outlier para vento
cepagri_cleaned[cepagri_cleaned$vento == 143.60, ]
cepagri_cleaned[48498:48508,]
sensa
summary(cepagri$sensa)
cepagri_cleaned[cepagri_cleaned$sensa >= 90, ]
cepagri_cleaned[cepagri_cleaned$sensa == 99.9, 5] <- NA
cepagri_cleaned[is.na(cepagri_cleaned$sensa),]
cepagri_cleaned <- cepagri_cleaned[!is.na(cepagri_cleaned$sensa),]
row.names(cepagri_cleaned) <- NULL
#verificando valor de outlier para vento (como concluimos nao tratar-se de outlier não removemos o valor)
cepagri_cleaned[cepagri_cleaned$vento == 143.60, ]
cepagri_cleaned[48498:48508,]
consecutive <- function(vector, k = 2) {
n <- length(vector)
result <- logical(n)
for (i in k:n)
if (all(vector[(i-k+1):i] == vector[i]))
result[(i-k+1):i] <- TRUE
return(result)
}
summary(cepagri$temp)
sum(is.na(cepagri$temp))
#removendo dados que se repitam por um dia ou mais em qualquer um dos campos
cepagri_cleaned <-cepagri_cleaned[
!(
consecutive(cepagri_cleaned$temp, 144)|
consecutive(cepagri_cleaned$vento, 144)|
consecutive(cepagri_cleaned$umid, 144)|
consecutive(cepagri_cleaned$sensa, 144)
) ,
]
length(cepagri_cleaned$temp)/length(cepagri$temp)
summary(cepagri_cleaned)
#definindo uma copia do dataset com colunas de informações temporais
cepagri_posix_lt <- cepagri_cleaned
cepagri_posix_lt$horario <- as.POSIXlt(cepagri_posix_lt$horario)
cepagri_posix_lt$ano <- unclass(cepagri_posix_lt$horario)$year + 1900
cepagri_posix_lt$mes <- unclass(cepagri_posix_lt$horario)$mon + 1
cepagri_posix_lt$dia <- unclass(cepagri_posix_lt$horario)$yday +1
cepagri_posix_lt$dia_do_mes <- unclass(cepagri_posix_lt$horario)$mday
summary(cepagri_posix_lt)
tapply(cepagri_posix_lt$temp, cepagri_posix_lt$dia, mean)
#plotando heatmaps dos valores anteriores para melhor visualização
table <- cepagri_posix_lt %>% group_by(dia_do_mes,mes) %>% summarise(media = mean(temp))
ggplot(table, aes(x=dia_do_mes, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
#temperatura e ano
table <- cepagri_posix_lt %>% group_by(ano,mes) %>% summarise(media = mean(temp))
ggplot(table, aes(x=ano, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
table <- cepagri_posix_lt %>% group_by(dia_do_mes,mes) %>% summarise(media = sd(temp))
ggplot(table, aes(x=dia_do_mes, y = mes, fill=media)) +
geom_tile() +
scale_fill_gradient(low="navy", high="red")
summary(cepagri_cleaned)
cepagri_cleaned[48498:48508,]
#verificando valor de outlier para vento (como concluimos nao tratar-se de outlier não removemos o valor)
cepagri_cleaned[cepagri_cleaned$vento == 143.60, ]
