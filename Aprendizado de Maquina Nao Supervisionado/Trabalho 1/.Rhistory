---
title: INF0613 -- Aprendizado de Máquina Não Supervisionado
output: pdf_document
subtitle: Trabalho 1 - Regras de Associação
author:
- Nome completo Integrante 1
- Nome completo Integrante 2
- Nome completo Integrante 3
---
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE, tidy = FALSE)
setwd("~/GitHub/mineiracao_dados_complexos/Aprendizado de Maquina Nao Supervisionado/Trabalho 1")
knitr::opts_chunk$set(echo = TRUE, error = FALSE, message = FALSE, warning = FALSE, tidy = FALSE)
options(digits = 3)
# Adicione os demais pacotes usados
# Bibliotecas usadas neste trabalho:
library(arules)
# Configurando ambiente de trabalho:
# setwd("")
# Ler transações
transactions <- read.csv('bakery.csv')
# Ler transações
transactions <- read.csv('bakery.csv', header=TRUE)
?read.csv
# Ler transações
transactions <- read.csv(file='bakery.csv', header=FALSE, sep=',', fill=TRUE)
transactions
colnames(transactions) <- c('product1', 'product2', 'product3', 'product4', 'product5')
# Visualizando transações
head(transactions)
# Sumário da base
summary(transactions)
inspect(transactions)
?inspect
inspect(transactions[1:10,])
# Ler transações
transactions <- read.transactions(file='bakery.csv', format='basket', sep=',')
# Visualizando transações
transactions
# Sumário da base
summary(transactions)
inspect(transactions[1:10,])
# Analisando a frequência dos itens
itemFrequencyPlot(transactions)
?itemFrequencyPlot
# Analisando a frequência dos itens
itemFrequencyPlot(transactions,topN=30)
# Ler transações
transactions <- read.transactions(file='bakery.csv', format='basket', sep=',')
# Visualizando transações
transactions
# Sumário da base
summary(transactions)
inspect(transactions[1:10,])
# Analisando a frequência dos itens
itemFrequencyPlot(transactions,topN=30)
# Visualizando transações
transactions
# Sumário da base
summary(transactions)
# Ler transações
transactions <- read.transactions(file='bakery.csv', format='basket', sep=',')
# Visualizando transações
transactions
# Sumário da base
summary(transactions)
inspect(transactions[1:10,])
# Analisando a frequência dos itens
itemFrequencyPlot(transactions,topN=30)
